//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int SelfDestructTime = 1;
    public const int View = 2;
    public const int ViewPath = 3;
    public const int ViewPrefab = 4;
    public const int Active = 5;
    public const int AnimatorDamageTaken = 6;
    public const int Damage = 7;
    public const int EntityLink = 8;
    public const int Id = 9;
    public const int Name = 10;
    public const int SpriteRenderer = 11;
    public const int StatusVisuals = 12;
    public const int Transform = 13;
    public const int WorldPosition = 14;
    public const int AbilityId = 15;
    public const int GarlicAuraAbility = 16;
    public const int OrbitingMushroomAbility = 17;
    public const int ParentAbility = 18;
    public const int ProcessedByArmaments = 19;
    public const int RecreatedOnUpgrade = 20;
    public const int ScatteringFireballAbility = 21;
    public const int ScheduledToProcessByArmaments = 22;
    public const int ShovelRadialStrikeAbility = 23;
    public const int UpgradeRequest = 24;
    public const int VegetableBoltAbility = 25;
    public const int Armament = 26;
    public const int EffectSetups = 27;
    public const int FollowingProducer = 28;
    public const int Processed = 29;
    public const int ScatteringFireballArmament = 30;
    public const int StatusSetups = 31;
    public const int TargetLimit = 32;
    public const int BaseStats = 33;
    public const int StatChange = 34;
    public const int StatModifiers = 35;
    public const int Cooldown = 36;
    public const int CooldownLeft = 37;
    public const int CooldownUp = 38;
    public const int DamageEffect = 39;
    public const int Effect = 40;
    public const int EffectValue = 41;
    public const int HealEffect = 42;
    public const int ProducerId = 43;
    public const int TargetId = 44;
    public const int EnchantHolder = 45;
    public const int EnchantTypeId = 46;
    public const int EnchantVisuals = 47;
    public const int ExplosiveEnchant = 48;
    public const int PoisonEnchant = 49;
    public const int Enemy = 50;
    public const int EnemyAnimator = 51;
    public const int EnemyTypeId = 52;
    public const int SpawnTimer = 53;
    public const int HealthBar = 54;
    public const int Hero = 55;
    public const int HeroAnimator = 56;
    public const int ExperienceMeter = 57;
    public const int LevelUp = 58;
    public const int CurrentHP = 59;
    public const int Dead = 60;
    public const int MaxHP = 61;
    public const int ProcessingDeath = 62;
    public const int Collected = 63;
    public const int Experience = 64;
    public const int LootTypeId = 65;
    public const int PickupRadius = 66;
    public const int Pullable = 67;
    public const int Pulling = 68;
    public const int AngleSpeed = 69;
    public const int Direction = 70;
    public const int MovementAvailable = 71;
    public const int Moving = 72;
    public const int OrbitCenterFollowTarget = 73;
    public const int OrbitCenterPosition = 74;
    public const int OrbitPhase = 75;
    public const int OrbitRadius = 76;
    public const int RotatesAroundCenter = 77;
    public const int RotationAlongDirection = 78;
    public const int Speed = 79;
    public const int TurnedAlongDirection = 80;
    public const int Applied = 81;
    public const int ApplierStatusLink = 82;
    public const int Duration = 83;
    public const int Effected = 84;
    public const int Freeze = 85;
    public const int Period = 86;
    public const int Poison = 87;
    public const int Status = 88;
    public const int StatusTypeId = 89;
    public const int TimerLeft = 90;
    public const int TimeSinceLastTick = 91;
    public const int Unapplied = 92;
    public const int CollectingTargetContinuously = 93;
    public const int CollectTargetsInterval = 94;
    public const int CollectTargetsTimer = 95;
    public const int LayerMask = 96;
    public const int ProcessedTargets = 97;
    public const int Radius = 98;
    public const int Reached = 99;
    public const int ReadyToCollectTargets = 100;
    public const int TargetsBuffer = 101;

    public const int TotalComponents = 102;

    public static readonly string[] componentNames = {
        "Destructed",
        "SelfDestructTime",
        "View",
        "ViewPath",
        "ViewPrefab",
        "Active",
        "AnimatorDamageTaken",
        "Damage",
        "EntityLink",
        "Id",
        "Name",
        "SpriteRenderer",
        "StatusVisuals",
        "Transform",
        "WorldPosition",
        "AbilityId",
        "GarlicAuraAbility",
        "OrbitingMushroomAbility",
        "ParentAbility",
        "ProcessedByArmaments",
        "RecreatedOnUpgrade",
        "ScatteringFireballAbility",
        "ScheduledToProcessByArmaments",
        "ShovelRadialStrikeAbility",
        "UpgradeRequest",
        "VegetableBoltAbility",
        "Armament",
        "EffectSetups",
        "FollowingProducer",
        "Processed",
        "ScatteringFireballArmament",
        "StatusSetups",
        "TargetLimit",
        "BaseStats",
        "StatChange",
        "StatModifiers",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "HealEffect",
        "ProducerId",
        "TargetId",
        "EnchantHolder",
        "EnchantTypeId",
        "EnchantVisuals",
        "ExplosiveEnchant",
        "PoisonEnchant",
        "Enemy",
        "EnemyAnimator",
        "EnemyTypeId",
        "SpawnTimer",
        "HealthBar",
        "Hero",
        "HeroAnimator",
        "ExperienceMeter",
        "LevelUp",
        "CurrentHP",
        "Dead",
        "MaxHP",
        "ProcessingDeath",
        "Collected",
        "Experience",
        "LootTypeId",
        "PickupRadius",
        "Pullable",
        "Pulling",
        "AngleSpeed",
        "Direction",
        "MovementAvailable",
        "Moving",
        "OrbitCenterFollowTarget",
        "OrbitCenterPosition",
        "OrbitPhase",
        "OrbitRadius",
        "RotatesAroundCenter",
        "RotationAlongDirection",
        "Speed",
        "TurnedAlongDirection",
        "Applied",
        "ApplierStatusLink",
        "Duration",
        "Effected",
        "Freeze",
        "Period",
        "Poison",
        "Status",
        "StatusTypeId",
        "TimerLeft",
        "TimeSinceLastTick",
        "Unapplied",
        "CollectingTargetContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimer",
        "LayerMask",
        "ProcessedTargets",
        "Radius",
        "Reached",
        "ReadyToCollectTargets",
        "TargetsBuffer"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.CommonComponents.Destructed),
        typeof(Code.Common.CommonComponents.SelfDestructTime),
        typeof(Code.Common.CommonComponents.View),
        typeof(Code.Common.CommonComponents.ViewPath),
        typeof(Code.Common.CommonComponents.ViewPrefab),
        typeof(Code.Gameplay.Common.Active),
        typeof(Code.Gameplay.Common.AnimatorDamageTakenComponent),
        typeof(Code.Gameplay.Common.Damage),
        typeof(Code.Gameplay.Common.EntityLink),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.Name),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.StatusVisualsComponent),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.AbilityIdComponent),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.GarlicAuraAbility),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.OrbitingMushroomAbility),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.ParentAbility),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.ProcessedByArmaments),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.RecreatedOnUpgrade),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.ScatteringFireballAbility),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.ScheduledToProcessByArmaments),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.ShovelRadialStrikeAbility),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.UpgradeRequest),
        typeof(Code.Gameplay.Features.Abilities.AbilityComponents.VegetableBoltAbility),
        typeof(Code.Gameplay.Features.Armaments.Armament),
        typeof(Code.Gameplay.Features.Armaments.EffectSetups),
        typeof(Code.Gameplay.Features.Armaments.FollowingProducer),
        typeof(Code.Gameplay.Features.Armaments.Processed),
        typeof(Code.Gameplay.Features.Armaments.ScatteringFireballArmament),
        typeof(Code.Gameplay.Features.Armaments.StatusSetups),
        typeof(Code.Gameplay.Features.Armaments.TargetLimit),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatModifiers),
        typeof(Code.Gameplay.Features.Cooldowns.Cooldown),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownLeft),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownUp),
        typeof(Code.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.Gameplay.Features.Effects.Effect),
        typeof(Code.Gameplay.Features.Effects.EffectValue),
        typeof(Code.Gameplay.Features.Effects.HealEffect),
        typeof(Code.Gameplay.Features.Effects.ProducerId),
        typeof(Code.Gameplay.Features.Effects.TargetId),
        typeof(Code.Gameplay.Features.Enchants.EnchantHolderComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantTypeIdComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantVisualsComponent),
        typeof(Code.Gameplay.Features.Enchants.ExplosiveEnchant),
        typeof(Code.Gameplay.Features.Enchants.PoisonEnchant),
        typeof(Code.Gameplay.Features.Enemies.Enemy),
        typeof(Code.Gameplay.Features.Enemies.EnemyAnimatorComponent),
        typeof(Code.Gameplay.Features.Enemies.EnemyTypeIdComponent),
        typeof(Code.Gameplay.Features.Enemies.SpawnTimerComponent),
        typeof(Code.Gameplay.Features.Hero.HealthBarComponent),
        typeof(Code.Gameplay.Features.Hero.Hero),
        typeof(Code.Gameplay.Features.Hero.HeroAnimatorComponent),
        typeof(Code.Gameplay.Features.LevelUp.ExperienceMeterComponent),
        typeof(Code.Gameplay.Features.LevelUp.LevelUp),
        typeof(Code.Gameplay.Features.Lifetime.CurrentHP),
        typeof(Code.Gameplay.Features.Lifetime.Dead),
        typeof(Code.Gameplay.Features.Lifetime.MaxHP),
        typeof(Code.Gameplay.Features.Lifetime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Loot.Collected),
        typeof(Code.Gameplay.Features.Loot.Experience),
        typeof(Code.Gameplay.Features.Loot.LootTypeIdComponent),
        typeof(Code.Gameplay.Features.Loot.PickupRadius),
        typeof(Code.Gameplay.Features.Loot.Pullable),
        typeof(Code.Gameplay.Features.Loot.Pulling),
        typeof(Code.Gameplay.Features.Movement.AngleSpeed),
        typeof(Code.Gameplay.Features.Movement.Direction),
        typeof(Code.Gameplay.Features.Movement.MovementAvailable),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.OrbitCenterFollowTarget),
        typeof(Code.Gameplay.Features.Movement.OrbitCenterPosition),
        typeof(Code.Gameplay.Features.Movement.OrbitPhase),
        typeof(Code.Gameplay.Features.Movement.OrbitRadius),
        typeof(Code.Gameplay.Features.Movement.RotatesAroundCenter),
        typeof(Code.Gameplay.Features.Movement.RotationAlongDirection),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Features.Movement.TurnedAlongDirection),
        typeof(Code.Gameplay.Features.Statuses.Applied),
        typeof(Code.Gameplay.Features.Statuses.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.Duration),
        typeof(Code.Gameplay.Features.Statuses.Effected),
        typeof(Code.Gameplay.Features.Statuses.Freeze),
        typeof(Code.Gameplay.Features.Statuses.Period),
        typeof(Code.Gameplay.Features.Statuses.Poison),
        typeof(Code.Gameplay.Features.Statuses.Status),
        typeof(Code.Gameplay.Features.Statuses.StatusTypeIdComponent),
        typeof(Code.Gameplay.Features.Statuses.TimerLeft),
        typeof(Code.Gameplay.Features.Statuses.TimeSinceLastTick),
        typeof(Code.Gameplay.Features.Statuses.Unapplied),
        typeof(Code.Gameplay.Features.TargetCollection.CollectingTargetContinuously),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsInterval),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsTimer),
        typeof(Code.Gameplay.Features.TargetCollection.LayerMask),
        typeof(Code.Gameplay.Features.TargetCollection.ProcessedTargets),
        typeof(Code.Gameplay.Features.TargetCollection.Radius),
        typeof(Code.Gameplay.Features.TargetCollection.Reached),
        typeof(Code.Gameplay.Features.TargetCollection.ReadyToCollectTargets),
        typeof(Code.Gameplay.Features.TargetCollection.TargetsBuffer)
    };
}
